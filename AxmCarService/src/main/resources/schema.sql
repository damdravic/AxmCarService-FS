USE axm_car_service;
--DROP TABLE IF EXISTS two_factor_verification;
--DROP TABLE IF EXISTS reset_pass_verifications;
--DROP TABLE IF EXISTS account_verifications;
--DROP TABLE IF EXISTS user_events;
--DROP TABLE IF EXISTS events;
--DROP TABLE IF EXISTS user_roles;
--DROP TABLE IF EXISTS roles;
--DROP TABLE IF EXISTS users;

CREATE TABLE IF NOT EXISTS users(
user_id BIGINT UNSIGNED   NOT NULL AUTO_INCREMENT PRIMARY KEY,
first_name                VARCHAR(50) NOT NULL,
last_name                 VARCHAR(50) NOT NULL,
email                     VARCHAR(50) NOT NULL,
password                  VARCHAR(255) DEFAULT NULL,
address                   VARCHAR(255) DEFAULT NULL,
phone                     VARCHAR(30) DEFAULT NULL,
title                     VARCHAR(50) DEFAULT NULL,
bio                       VARCHAR(255) DEFAULT NULL,
enable BOOLEAN            DEFAULT FALSE,
non_locked BOOLEAN        DEFAULT TRUE,
using_mfa BOOLEAN         DEFAULT FALSE,
created_date DATETIME     DEFAULT CURRENT_TIMESTAMP,
image_url VARCHAR(255)    DEFAULT NULL,
CONSTRAINT UQ_Users_Email UNIQUE(email)

);

CREATE TABLE IF NOT EXISTS workshop(
workshop_id BIGINT UNSIGNED NOT NULL AUTO_INCREMENT PRIMARY KEY,
workshop_name VARCHAR(50) NOT NULL,
description VARCHAR(255) NOT NULL
);

CREATE TABLE IF NOT EXISTS vehicle(
vehicle_id BIGINT UNSIGNED NOT NULL AUTO_INCREMENT PRIMARY KEY,
vehicle_make VARCHAR(50) NOT NULL,
vehicle_model VARCHAR(50) NOT NULL,
vehicle_year INT NOT NULL,
vehicle_color VARCHAR(50) DEFAULT NULL,
vehicle_license_plate VARCHAR(20) NOT NULL,
vehicle_vin VARCHAR(20) DEFAULT NULL
);


CREATE TABLE IF NOT EXISTS repair_order(
order_id BIGINT UNSIGNED NOT NULL AUTO_INCREMENT PRIMARY KEY,
workshop_id BIGINT UNSIGNED NOT NULL,
vehicle_id BIGINT UNSIGNED NOT NULL,
technician_id BIGINT UNSIGNED NOT NULL,
description VARCHAR(255) DEFAULT NULL,
received_date DATETIME DEFAULT CURRENT_TIMESTAMP,
diagnosis VARCHAR(255) DEFAULT NULL,
status VARCHAR(50) NOT NULL CHECK(status IN ('Pending','Waiting Parts','In Progress')),
estimated_time DATETIME DEFAULT NULL,
estimated_cost BIGINT UNSIGNED DEFAULT NULL,
total_cost BIGINT UNSIGNED DEFAULT NULL,
FOREIGN KEY (workshop_id) REFERENCES Workshop(workshop_id) ON DELETE CASCADE ON UPDATE CASCADE,
FOREIGN KEY (vehicle_id) REFERENCES Vehicle(vehicle_id) ON DELETE CASCADE ON UPDATE CASCADE,
FOREIGN KEY (technician_id) REFERENCES Users(user_id) ON DELETE CASCADE ON UPDATE CASCADE

);

CREATE TABLE IF NOT EXISTS parts(
 part_id BIGINT UNSIGNED NOT NULL AUTO_INCREMENT PRIMARY KEY,
 part_name VARCHAR(50) NOT NULL,
 part_description  VARCHAR(255) DEFAULT NULL,
 part_price BIGINT UNSIGNED NOT NULL,
 part_manufacturer VARCHAR(50) DEFAULT NULL
 );

CREATE TABLE IF NOT EXISTS technician(
technician_id BIGINT UNSIGNED NOT NULL AUTO_INCREMENT PRIMARY KEY,
technician_name VARCHAR(50) NOT NULL,
technician_user_id BIGINT UNSIGNED NOT NULL,
technician_active BOOLEAN NOT NULL,
technician_workshop VARCHAR(50) NOT NULL,
technician_experience INTEGER NOT NULL,
technician_specialization VARCHAR(50) NOT NULL,
FOREIGN KEY (technician_user_id) REFERENCES Users(user_id) ON DELETE CASCADE ON UPDATE CASCADE

);

 CREATE TABLE IF NOT EXISTS customer(
 customer_id BIGINT UNSIGNED NOT NULL AUTO_INCREMENT PRIMARY KEY,
 customer_first_name VARCHAR(50) NOT NULL,
 customer_last_name VARCHAR(50) NOT NULL,
    customer_email VARCHAR(50) NOT NULL,
    customer_phone VARCHAR(30) DEFAULT NULL,
   customer_notes VARCHAR(255) DEFAULT NULL,
   customer_active BOOLEAN DEFAULT TRUE,
   customer_created_date DATETIME DEFAULT CURRENT_TIMESTAMP,
   customer_updated_date DATETIME DEFAULT NULL,
   customer_created_by BIGINT UNSIGNED NOT NULL,
    customer_updated_by BIGINT UNSIGNED DEFAULT NULL,
    FOREIGN KEY (customer_created_by) REFERENCES Users(user_id) ON DELETE CASCADE ON UPDATE CASCADE,
    FOREIGN KEY (customer_updated_by) REFERENCES Users(user_id) ON DELETE CASCADE ON UPDATE CASCADE
    );






CREATE TABLE IF NOT EXISTS labor(
 labor_id BIGINT UNSIGNED NOT NULL AUTO_INCREMENT PRIMARY KEY,
 labor_name VARCHAR(50) NOT NULL,
 labor_description  VARCHAR(255) DEFAULT NULL,
 labor_cost BIGINT UNSIGNED NOT NULL
 );

 CREATE TABLE IF NOT EXISTS repair_order_part(
  rop_id BIGINT UNSIGNED NOT NULL AUTO_INCREMENT PRIMARY KEY,
  order_id BIGINT UNSIGNED NOT NULL,
  part_id BIGINT UNSIGNED NOT NULL,
  part_quantity INT UNSIGNED NOT NULL,
  FOREIGN KEY (order_id) REFERENCES Repair_order(order_id) ON DELETE CASCADE ON UPDATE CASCADE,
  FOREIGN KEY (part_id) REFERENCES Parts(part_id) ON DELETE CASCADE ON UPDATE CASCADE
 );

 CREATE TABLE IF NOT EXISTS repair_order_labor(
 rol_id BIGINT UNSIGNED NOT NULL AUTO_INCREMENT PRIMARY KEY,
 order_id BIGINT UNSIGNED NOT NULL,
 labor_id BIGINT UNSIGNED NOT NULL,
 labor_quantity INT UNSIGNED NOT NULL,
 FOREIGN KEY (order_id) REFERENCES Repair_order(order_id) ON DELETE CASCADE ON UPDATE CASCADE,
 FOREIGN KEY (labor_id) REFERENCES Labor(labor_id) ON DELETE CASCADE ON UPDATE CASCADE
 );


CREATE TABLE IF NOT EXISTS roles(
role_id BIGINT UNSIGNED   NOT NULL AUTO_INCREMENT PRIMARY KEY,
role_name                VARCHAR(50) NOT NULL,
permission                 VARCHAR(255) NOT NULL,

CONSTRAINT UQ_Users_Email UNIQUE(role_name)

);



CREATE TABLE IF NOT EXISTS user_roles(
ur_id    BIGINT UNSIGNED   NOT NULL AUTO_INCREMENT PRIMARY KEY,
ur_user_id         BIGINT UNSIGNED   NOT NULL ,
ur_role_id         BIGINT UNSIGNED   NOT NULL ,
FOREIGN KEY (ur_user_id) REFERENCES Users(user_id) ON DELETE CASCADE ON UPDATE CASCADE,
FOREIGN KEY (ur_role_id) REFERENCES Roles(role_id) ON DELETE CASCADE ON UPDATE CASCADE,

CONSTRAINT UQ_UserRoles_User_Id UNIQUE(ur_user_id)

);


CREATE TABLE IF NOT EXISTS events(
event_id                 BIGINT UNSIGNED   NOT NULL AUTO_INCREMENT PRIMARY KEY,
event_type               VARCHAR(50) NOT NULL CHECK(event_type IN ('LOGIN_ATTEMPT','LOGIN_ATTEMPT_FAILURE')),
event_description        VARCHAR(255) NOT NULL,

CONSTRAINT UQ_Events_Type UNIQUE(event_type)

);




CREATE TABLE IF NOT EXISTS user_events(
ue_id      BIGINT UNSIGNED   NOT NULL AUTO_INCREMENT PRIMARY KEY,
ue_user_id  BIGINT UNSIGNED   NOT NULL,
ue_event_id  BIGINT UNSIGNED  NOT NULL,
device VARCHAR(100) DEFAULT NULL,
ip_address VARCHAR(100) DEFAULT NULL,
created_at DATETIME DEFAULT CURRENT_TIMESTAMP,
FOREIGN KEY (ue_event_id) REFERENCES events(event_id) ON DELETE CASCADE ON UPDATE CASCADE,
FOREIGN KEY (ue_user_id) REFERENCES users(user_id) ON DELETE CASCADE ON UPDATE CASCADE

);




CREATE TABLE IF NOT EXISTS account_verifications(
av_id      BIGINT UNSIGNED   NOT NULL AUTO_INCREMENT PRIMARY KEY,
av_user_id  BIGINT UNSIGNED   NOT NULL,
url VARCHAR(255)  DEFAULT NULL,
--date DATETIME NOT NULL,
FOREIGN KEY (av_user_id) REFERENCES users(user_id) ON DELETE CASCADE ON UPDATE CASCADE,
CONSTRAINT UQ_AccountVeriffication_User_Id UNIQUE (av_user_id),
CONSTRAINT UQ_AccountVeriffication_Url UNIQUE (url)

);



CREATE TABLE IF NOT EXISTS reset_pass_verifications(
rpv_id      BIGINT UNSIGNED   NOT NULL AUTO_INCREMENT PRIMARY KEY,
rpv_user_id  BIGINT UNSIGNED   NOT NULL,
url VARCHAR(255)  DEFAULT NULL,
expirtation_date DATETIME DEFAULT NULL,
--date DATETIME NOT NULL,
FOREIGN KEY (rpv_user_id) REFERENCES users(user_id) ON DELETE CASCADE ON UPDATE CASCADE,
CONSTRAINT UQ_ResetPassVeriffication_User_Id UNIQUE (rpv_user_id),
CONSTRAINT UQ_ResetPassVeriffication_Url UNIQUE (url)

);



CREATE TABLE IF NOT EXISTS two_factor_verifications(
tfv_id      BIGINT UNSIGNED   NOT NULL AUTO_INCREMENT PRIMARY KEY,
tfv_user_id  BIGINT UNSIGNED   NOT NULL,
code VARCHAR(255)  DEFAULT NULL,
expirtatio_date DATETIME DEFAULT NULL,
--date DATETIME NOT NULL,
FOREIGN KEY (tfv_user_id) REFERENCES users(user_id) ON DELETE CASCADE ON UPDATE CASCADE,
CONSTRAINT UQ_TwoFactorVeriffication_User_Id UNIQUE (tfv_user_id),
CONSTRAINT UQ_TwoFactorVeriffication_Code UNIQUE (code)

);